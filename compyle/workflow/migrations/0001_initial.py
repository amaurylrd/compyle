# Generated by Django 4.2.21 on 2025-05-18 17:45

import datetime
import uuid

import django.db.models.deletion
from django.db import migrations, models

import compyle.lib.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Workflow",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, help_text="The datetime of the creation.", verbose_name="created at"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, help_text="The datetime of the last update.", verbose_name="updated at"
                    ),
                ),
                (
                    "reference",
                    models.CharField(
                        default=uuid.uuid4,
                        help_text="The entity reference.",
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        validators=[compyle.lib.validators.ReferenceValidator()],
                        verbose_name="reference",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="The endpoint name, for a more human display.",
                        max_length=255,
                        unique=True,
                        verbose_name="name",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        default=None,
                        help_text="The description of the workflow.",
                        null=True,
                        verbose_name="description",
                    ),
                ),
                (
                    "active",
                    models.BooleanField(
                        blank=True, default=True, help_text="Tells if the workflow is active.", verbose_name="active"
                    ),
                ),
            ],
            options={
                "verbose_name": "workflow",
                "verbose_name_plural": "workflows",
            },
        ),
        migrations.CreateModel(
            name="WorkflowStep",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, help_text="The datetime of the creation.", verbose_name="created at"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, help_text="The datetime of the last update.", verbose_name="updated at"
                    ),
                ),
                (
                    "reference",
                    models.CharField(
                        default=uuid.uuid4,
                        help_text="The entity reference.",
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        validators=[compyle.lib.validators.ReferenceValidator()],
                        verbose_name="reference",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("running", "Running"),
                            ("retrying", "Retrying"),
                            ("success", "Success"),
                            ("failed", "Failed"),
                        ],
                        default="pending",
                        help_text="The status of the step.",
                        max_length=255,
                        verbose_name="status",
                    ),
                ),
                (
                    "configuration",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="The configuration for that task.",
                        verbose_name="configuration",
                    ),
                ),
                (
                    "trigger_type",
                    models.CharField(
                        choices=[
                            ("manual", "Manual by user"),
                            ("auto", "Automatically after previous step completes"),
                            ("scheduled", "Scheduled at a specific time or interval"),
                        ],
                        default="manual",
                        help_text="The status of the step.",
                        max_length=255,
                        verbose_name="trigger type",
                    ),
                ),
                (
                    "repeat_every",
                    models.DurationField(
                        blank=True,
                        default=datetime.timedelta(days=2),
                        help_text="How often to repeat the workflow.",
                        null=True,
                        verbose_name="repeat every",
                    ),
                ),
                (
                    "next_run_at",
                    models.DateTimeField(
                        blank=True, help_text="Next scheduled execution time.", null=True, verbose_name="next run"
                    ),
                ),
                (
                    "async_task",
                    models.BooleanField(
                        blank=True,
                        default=False,
                        help_text="Tells if this step runs asynchronously.",
                        verbose_name="async",
                    ),
                ),
                (
                    "depends_on",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Steps that must complete before this one starts.",
                        related_name="unblocks",
                        to="workflow.workflowstep",
                        verbose_name="depends on",
                    ),
                ),
                (
                    "workflow",
                    models.ForeignKey(
                        help_text="The workflow of the step.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="steps",
                        to="workflow.workflow",
                        verbose_name="workflow",
                    ),
                ),
            ],
            options={
                "verbose_name": "workflow step",
                "verbose_name_plural": "workflow steps",
            },
        ),
        migrations.CreateModel(
            name="WorkflowTask",
            fields=[
                (
                    "reference",
                    models.CharField(
                        default=uuid.uuid4,
                        help_text="The entity reference.",
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        validators=[compyle.lib.validators.ReferenceValidator()],
                        verbose_name="reference",
                    ),
                ),
                (
                    "task_id",
                    models.CharField(
                        blank=True,
                        help_text="Celery task ID for tracking execution.",
                        max_length=255,
                        null=True,
                        verbose_name="task_id",
                    ),
                ),
                (
                    "result",
                    models.JSONField(blank=True, default=dict, help_text="Result of the task.", verbose_name="result"),
                ),
                (
                    "started_at",
                    models.DateTimeField(
                        auto_now_add=True, help_text="The datetime of the task execution.", verbose_name="started at"
                    ),
                ),
                (
                    "completed_at",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        help_text="The datetime of the task completion.",
                        null=True,
                        verbose_name="completed at",
                    ),
                ),
                (
                    "step",
                    models.ForeignKey(
                        help_text="The workflow step this task belongs to.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tasks",
                        to="workflow.workflowstep",
                        verbose_name="step",
                    ),
                ),
            ],
            options={
                "verbose_name": "workflow task",
                "verbose_name_plural": "workflow tasks",
            },
        ),
    ]
